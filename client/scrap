
# rescue_from ActiveRecord::RecordNotFound, with: :render_not_found_response
#   rescue_from ActiveRecord::RecordInvalid, with: :render_unprocessable_entity_error

#   def render_not_found_response
#     render json: {error: "Record Not Found"}, status: :not_found 
#   end

#   def render_unprocessable_entity_error
#     render json: {errors: exception.record.errors.full_messages}, status: :unprocessable_entity
#   end


    
# const [book, setBook] = useState(props.book)

# const readBook = (event) => {
#     console.log(event.target.id)
#    const id = parseInt(event.target.id)
#    if(window.confirm("Nice Choice."))
#    fetch(`http://localhost:3000/books/${id}`, {
#        method: "PATCH",
#        headers: {
#        "Content-type": "application/json"
#        },
#        body: JSON.stringify({read: true})
#    })
#    .then(response => response.json())
#    .then(book => setBook(book))
# }





function App() {

  const [user, setUser] = useState(null)

  useEffect(() => {
    fetch('/me')
    .then((response) => {
      if(response.ok){
        response.json()
        .then((user) => setUser(user))
      }
    })
  }, [])
  
  
#   return (
    
#     <Switch>
#              <Route exact path="/home">
#                 <HomePage setUser={setUser} />
#             </Route>
#             <Route exact path="/login">
#                 <LoginForm setUser={setUser} />
#             </Route>
#             <Route exact path="/signup">
#                 <SignUpForm setUser={setUser} />
#             </Route>
#             <Route exact path="/books">
#                 <BookContainer user={user} />
#             </Route>
#             <Route exact path="/authors">
#                 <AuthorContainer user={user} />
#             </Route>
#             <Route exact path="/authors/:id">
#                 <Author user={user} />
#             </Route>
#             <Route exact path="/books/:id">
#                 <BookReviewsContainer user={user} />
#             </Route>
#             <Route exact path="/authors/books/:id">
#                 <AuthorBooksContainer user={user} />
#             </Route>
#             <Route exact path="/mylibrary">
#                 <PersonalBookContainer  />
#             </Route>
#         </Switch>
#   )
# }

# export default App;